services:
  ###> Nuxt Frontend ###
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nuxt_client
    ports:
      - "3000:3000"
    volumes:
      - ./client:/usr/src/client
      - /usr/src/client/node_modules
    environment:
      - NUXT_PUBLIC_API_URL=http://symfony_api:80/api
    depends_on:
      - api
    stop_signal: SIGINT
    command: ["npm", "run", "dev"]
    networks:
      - symfony_network
  ###< Nuxt Frontend ###

  ###> Symfony Backend ###
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: symfony_api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=16&charset=utf8
    volumes:
      - ./api:/var/www/api
    ports:
      - "8033:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - symfony_network
  ###< Symfony Backend ###

  ###> PostgreSQL Database ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - symfony_network
  ###< PostgreSQL Database ###

  ###> pgAdmin Service ###
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - symfony_network
  ###< pgAdmin Service ###

networks:
  symfony_network:
    driver: bridge

volumes:
  database_data: